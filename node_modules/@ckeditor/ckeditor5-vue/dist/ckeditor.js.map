{"version":3,"sources":["webpack://CKEditor/webpack/universalModuleDefinition","webpack://CKEditor/external umd \"lodash-es\"","webpack://CKEditor/external umd \"vue\"","webpack://CKEditor/webpack/bootstrap","webpack://CKEditor/webpack/runtime/define property getters","webpack://CKEditor/webpack/runtime/hasOwnProperty shorthand","webpack://CKEditor/./src/ckeditor.ts","webpack://CKEditor/./src/plugin.ts"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__380__","__WEBPACK_EXTERNAL_MODULE__76__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","defineComponent","name","model","event","props","editor","type","Function","required","config","default","modelValue","String","tagName","disabled","Boolean","disableTwoWayDataBinding","emits","data","instance","lastEditorData","watch","value","this","set","readOnlyMode","enableReadOnlyMode","disableReadOnlyMode","CKEDITOR_VERSION","window","console","warn","major","split","map","Number","startsWith","editorConfig","assign","initialData","create","$el","then","markRaw","setUpEditorEvents","$emit","catch","error","destroy","methods","emitDebouncedInputEvent","debounce","evt","leading","document","on","editing","view","h","Error","app","component"],"mappings":"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","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vue\"), require(\"lodash-es\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"vue\", \"lodash-es\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CKEditor\"] = factory(require(\"vue\"), require(\"lodash-es\"));\n\telse\n\t\troot[\"CKEditor\"] = factory(root[\"vue\"], root[\"lodash-es\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__380__, __WEBPACK_EXTERNAL_MODULE__76__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__76__;","module.exports = __WEBPACK_EXTERNAL_MODULE__380__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global window, console */\n\nimport { debounce } from 'lodash-es';\nimport { defineComponent, h, markRaw, type PropType } from 'vue';\nimport type { Editor, EditorConfig } from 'ckeditor5';\n\nconst SAMPLE_READ_ONLY_LOCK_ID = 'Integration Sample';\nconst INPUT_EVENT_DEBOUNCE_WAIT = 300;\n\nexport interface CKEditorComponentData {\n\tinstance: Editor | null;\n\tlastEditorData: string | null;\n}\n\nexport default defineComponent( {\n\tname: 'Ckeditor',\n\n\tmodel: {\n\t\tprop: 'modelValue',\n\t\tevent: 'update:modelValue'\n\t},\n\n\tprops: {\n\t\teditor: {\n\t\t\ttype: Function as unknown as PropType<{ create( ...args: any ): Promise<Editor> }>,\n\t\t\trequired: true\n\t\t},\n\t\tconfig: {\n\t\t\ttype: Object as PropType<EditorConfig>,\n\t\t\tdefault: () => ( {} )\n\t\t},\n\t\tmodelValue: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\ttagName: {\n\t\t\ttype: String,\n\t\t\tdefault: 'div'\n\t\t},\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tdisableTwoWayDataBinding: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\n\temits: [\n\t\t'ready',\n\t\t'destroy',\n\t\t'blur',\n\t\t'focus',\n\t\t'input',\n\t\t'update:modelValue'\n\t],\n\n\tdata(): CKEditorComponentData {\n\t\treturn {\n\t\t\t// Don't define it in #props because it produces a warning.\n\t\t\t// https://v3.vuejs.org/guide/component-props.html#one-way-data-flow\n\t\t\tinstance: null,\n\t\t\tlastEditorData: null\n\t\t};\n\t},\n\n\twatch: {\n\t\tmodelValue( value ) {\n\t\t\t// Synchronize changes of #modelValue. There are two sources of changes:\n\t\t\t//\n\t\t\t//                External modelValue change      ──────╮\n\t\t\t//                                                      ╰─────> ┏━━━━━━━━━━━┓\n\t\t\t//                                                              ┃ Component ┃\n\t\t\t//                                                      ╭─────> ┗━━━━━━━━━━━┛\n\t\t\t//                   Internal data change         ──────╯\n\t\t\t//             (typing, commands, collaboration)\n\t\t\t//\n\t\t\t// Case 1: If the change was external (via props), the editor data must be synced with\n\t\t\t// the component using instance#setData() and it is OK to destroy the selection.\n\t\t\t//\n\t\t\t// Case 2: If the change is the result of internal data change, the #modelValue is the\n\t\t\t// same as this.lastEditorData, which has been cached on #change:data. If we called\n\t\t\t// instance#setData() at this point, that would demolish the selection.\n\t\t\t//\n\t\t\t// To limit the number of instance#setData() which is time-consuming when there is a\n\t\t\t// lot of data we make sure:\n\t\t\t//    * the new modelValue is at least different than the old modelValue (Case 1.)\n\t\t\t//    * the new modelValue is different than the last internal instance state (Case 2.)\n\t\t\t//\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-vue/issues/42.\n\t\t\tif ( this.instance && value !== this.lastEditorData ) {\n\t\t\t\tthis.instance.data.set( value );\n\t\t\t}\n\t\t},\n\n\t\t// Synchronize changes of #disabled.\n\t\tdisabled( readOnlyMode ) {\n\t\t\tif ( readOnlyMode ) {\n\t\t\t\tthis.instance!.enableReadOnlyMode( SAMPLE_READ_ONLY_LOCK_ID );\n\t\t\t} else {\n\t\t\t\tthis.instance!.disableReadOnlyMode( SAMPLE_READ_ONLY_LOCK_ID );\n\t\t\t}\n\t\t}\n\t},\n\n\tcreated() {\n\t\tconst { CKEDITOR_VERSION } = window;\n\n\t\tif ( !CKEDITOR_VERSION ) {\n\t\t\treturn console.warn( 'Cannot find the \"CKEDITOR_VERSION\" in the \"window\" scope.' );\n\t\t}\n\n\t\tconst [ major ] = CKEDITOR_VERSION.split( '.' ).map( Number );\n\n\t\tif ( major >= 42 || CKEDITOR_VERSION.startsWith( '0.0.0' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.warn( 'The <CKEditor> component requires using CKEditor 5 in version 42+ or nightly build.' );\n\t},\n\n\tmounted() {\n\t\t// Clone the config first so it never gets mutated (across multiple editor instances).\n\t\t// https://github.com/ckeditor/ckeditor5-vue/issues/101\n\t\tconst editorConfig: EditorConfig = Object.assign( {}, this.config );\n\n\t\tif ( this.modelValue ) {\n\t\t\teditorConfig.initialData = this.modelValue;\n\t\t}\n\n\t\tthis.editor.create( this.$el, editorConfig )\n\t\t\t.then( editor => {\n\t\t\t\t// Save the reference to the instance for further use.\n\t\t\t\tthis.instance = markRaw( editor );\n\n\t\t\t\tthis.setUpEditorEvents();\n\n\t\t\t\t// Synchronize the editor content. The #modelValue may change while the editor is being created, so the editor content has\n\t\t\t\t// to be synchronized with these potential changes as soon as it is ready.\n\t\t\t\tif ( this.modelValue !== editorConfig.initialData ) {\n\t\t\t\t\teditor.data.set( this.modelValue );\n\t\t\t\t}\n\n\t\t\t\t// Set initial disabled state.\n\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\teditor.enableReadOnlyMode( SAMPLE_READ_ONLY_LOCK_ID );\n\t\t\t\t}\n\n\t\t\t\t// Let the world know the editor is ready.\n\t\t\t\tthis.$emit( 'ready', editor );\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\tconsole.error( error );\n\t\t\t} );\n\t},\n\n\tbeforeUnmount() {\n\t\tif ( this.instance ) {\n\t\t\tthis.instance.destroy();\n\t\t\tthis.instance = null;\n\t\t}\n\n\t\t// Note: By the time the editor is destroyed (promise resolved, editor#destroy fired)\n\t\t// the Vue component will not be able to emit any longer. So emitting #destroy a bit earlier.\n\t\tthis.$emit( 'destroy', this.instance );\n\t},\n\n\tmethods: {\n\t\tsetUpEditorEvents() {\n\t\t\tconst editor = this.instance!;\n\n\t\t\t// Use the leading edge so the first event in the series is emitted immediately.\n\t\t\t// Failing to do so leads to race conditions, for instance, when the component modelValue\n\t\t\t// is set twice in a time span shorter than the debounce time.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-vue/issues/149.\n\t\t\tconst emitDebouncedInputEvent = debounce( evt => {\n\t\t\t\tif ( this.disableTwoWayDataBinding ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Cache the last editor data. This kind of data is a result of typing,\n\t\t\t\t// editor command execution, collaborative changes to the document, etc.\n\t\t\t\t// This data is compared when the component modelValue changes in a 2-way binding.\n\t\t\t\tconst data = this.lastEditorData = editor.data.get();\n\n\t\t\t\t// The compatibility with the v-model and general Vue.js concept of input–like components.\n\t\t\t\tthis.$emit( 'update:modelValue', data, evt, editor );\n\t\t\t\tthis.$emit( 'input', data, evt, editor );\n\t\t\t}, INPUT_EVENT_DEBOUNCE_WAIT, { leading: true } );\n\n\t\t\t// Debounce emitting the #input event. When data is huge, instance#getData()\n\t\t\t// takes a lot of time to execute on every single key press and ruins the UX.\n\t\t\t//\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-vue/issues/42\n\t\t\teditor.model.document.on( 'change:data', emitDebouncedInputEvent );\n\n\t\t\teditor.editing.view.document.on( 'focus', evt => {\n\t\t\t\tthis.$emit( 'focus', evt, editor );\n\t\t\t} );\n\n\t\t\teditor.editing.view.document.on( 'blur', evt => {\n\t\t\t\tthis.$emit( 'blur', evt, editor );\n\t\t\t} );\n\t\t}\n\t},\n\n\trender() {\n\t\treturn h( this.tagName );\n\t}\n} );\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* eslint-env browser */\nimport * as Vue from 'vue';\nimport CKEditorComponent from './ckeditor';\n\n/* istanbul ignore if */\nif ( !Vue.version || !Vue.version.startsWith( '3.' ) ) {\n\tthrow new Error(\n\t\t'The CKEditor plugin works only with Vue 3+. ' +\n\t\t'For more information, please refer to ' +\n\t\t'https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/frameworks/vuejs-v3.html'\n\t);\n}\n\nexport default {\n\t/**\n\t * Installs the plugin, registering the `<ckeditor>` component.\n\t *\n\t * @param app The application instance.\n\t */\n\tinstall( app: Vue.App ): void {\n\t\tapp.component( 'Ckeditor', CKEditorComponent );\n\t},\n\n\tcomponent: CKEditorComponent\n};\n\ndeclare module 'vue' {\n  interface GlobalComponents {\n    Ckeditor: typeof CKEditorComponent;\n  }\n}\n"],"sourceRoot":""}