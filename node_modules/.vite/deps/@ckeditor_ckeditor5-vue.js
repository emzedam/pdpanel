import {
  init_lodash,
  lodash_exports
} from "./chunk-BKMOA5S7.js";
import {
  require_vue
} from "./chunk-4FS6WZAW.js";
import "./chunk-WHWSU5MI.js";
import {
  __commonJS,
  __toCommonJS
} from "./chunk-WGAPYIUP.js";

// node_modules/@ckeditor/ckeditor5-vue/dist/ckeditor.js
var require_ckeditor = __commonJS({
  "node_modules/@ckeditor/ckeditor5-vue/dist/ckeditor.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t(require_vue(), (init_lodash(), __toCommonJS(lodash_exports))) : "function" == typeof define && define.amd ? define(["vue", "lodash-es"], t) : "object" == typeof exports ? exports.CKEditor = t(require_vue(), (init_lodash(), __toCommonJS(lodash_exports))) : e.CKEditor = t(e.vue, e["lodash-es"]);
    }(self, (e, t) => (() => {
      "use strict";
      var i = { 76: (e2) => {
        e2.exports = t;
      }, 380: (t2) => {
        t2.exports = e;
      } }, o = {};
      function n(e2) {
        var t2 = o[e2];
        if (void 0 !== t2)
          return t2.exports;
        var a2 = o[e2] = { exports: {} };
        return i[e2](a2, a2.exports, n), a2.exports;
      }
      n.d = (e2, t2) => {
        for (var i2 in t2)
          n.o(t2, i2) && !n.o(e2, i2) && Object.defineProperty(e2, i2, { enumerable: true, get: t2[i2] });
      }, n.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2);
      var a = {};
      return (() => {
        n.d(a, { default: () => o2 });
        var e2 = n(380), t2 = n(76);
        const i2 = (0, e2.defineComponent)({ name: "Ckeditor", model: { prop: "modelValue", event: "update:modelValue" }, props: { editor: { type: Function, required: true }, config: { type: Object, default: () => ({}) }, modelValue: { type: String, default: "" }, tagName: { type: String, default: "div" }, disabled: { type: Boolean, default: false }, disableTwoWayDataBinding: { type: Boolean, default: false } }, emits: ["ready", "destroy", "blur", "focus", "input", "update:modelValue"], data: () => ({ instance: null, lastEditorData: null }), watch: { modelValue(e3) {
          this.instance && e3 !== this.lastEditorData && this.instance.data.set(e3);
        }, disabled(e3) {
          e3 ? this.instance.enableReadOnlyMode("Integration Sample") : this.instance.disableReadOnlyMode("Integration Sample");
        } }, created() {
          const { CKEDITOR_VERSION: e3 } = window;
          if (!e3)
            return console.warn('Cannot find the "CKEDITOR_VERSION" in the "window" scope.');
          const [t3] = e3.split(".").map(Number);
          t3 >= 42 || e3.startsWith("0.0.0") || console.warn("The <CKEditor> component requires using CKEditor 5 in version 42+ or nightly build.");
        }, mounted() {
          const t3 = Object.assign({}, this.config);
          this.modelValue && (t3.initialData = this.modelValue), this.editor.create(this.$el, t3).then((i3) => {
            this.instance = (0, e2.markRaw)(i3), this.setUpEditorEvents(), this.modelValue !== t3.initialData && i3.data.set(this.modelValue), this.disabled && i3.enableReadOnlyMode("Integration Sample"), this.$emit("ready", i3);
          }).catch((e3) => {
            console.error(e3);
          });
        }, beforeUnmount() {
          this.instance && (this.instance.destroy(), this.instance = null), this.$emit("destroy", this.instance);
        }, methods: { setUpEditorEvents() {
          const e3 = this.instance, i3 = (0, t2.debounce)((t3) => {
            if (this.disableTwoWayDataBinding)
              return;
            const i4 = this.lastEditorData = e3.data.get();
            this.$emit("update:modelValue", i4, t3, e3), this.$emit("input", i4, t3, e3);
          }, 300, { leading: true });
          e3.model.document.on("change:data", i3), e3.editing.view.document.on("focus", (t3) => {
            this.$emit("focus", t3, e3);
          }), e3.editing.view.document.on("blur", (t3) => {
            this.$emit("blur", t3, e3);
          });
        } }, render() {
          return (0, e2.h)(this.tagName);
        } });
        if (!e2.version || !e2.version.startsWith("3."))
          throw new Error("The CKEditor plugin works only with Vue 3+. For more information, please refer to https://ckeditor.com/docs/ckeditor5/latest/builds/guides/integration/frameworks/vuejs-v3.html");
        const o2 = { install(e3) {
          e3.component("Ckeditor", i2);
        }, component: i2 };
      })(), a = a.default;
    })());
  }
});
export default require_ckeditor();
/*! Bundled license information:

@ckeditor/ckeditor5-vue/dist/ckeditor.js:
  (*!
   * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.
   * For licensing, see LICENSE.md.
   *)
*/
//# sourceMappingURL=@ckeditor_ckeditor5-vue.js.map
